name: Build rpi4 archlinuxarm

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "**/README.md"

jobs:
  build:
    runs-on: ubuntu-latest
    env: 
      BUILDER_ENV: 'sudo arch-chroot ./builder qemu-aarch64-static /usr/bin/bash -c'
      TARGET_ENV: 'sudo arch-chroot ./builder qemu-aarch64-static /usr/bin/bash arch-chroot /mnt /usr/bin/bash -c'
      RELEASE: '$(date +%Y%m%d)'
      DEVICE: '$(losetup -f)'

    steps:
      - name: checkout repo
        uses: actions/checkout@v2

      - name: generate builder
        run: |
          sudo apt install qemu-user-static libarchive-tools arch-install-scripts
          sudo curl -L -o ./ArchLinuxARM-aarch64-latest.tar.gz http://os.archlinuxarm.org/os/ArchLinuxARM-aarch64-latest.tar.gz
          sudo mkdir ./builder
          sudo bsdtar -xpf ./ArchLinuxARM-aarch64-latest.tar.gz -C ./builder
          sudo cp /usr/bin/qemu-aarch64-static ./builder/usr/bin/qemu-aarch64-static
          sudo cp -f ./pacman.conf ./builder/etc/pacman.conf
          echo PACKAGES=$(cat package.md) >> $GITHUB_ENV
          ${{ env.BUILDER_ENV }} "pacman -Sy --ask=4 arch-install-scripts"

      - name: prepare image file
        run: |
          dd if=/dev/zero of=ArchLinuxARM-rpi-4-aarch64-latest.img bs=4000 count=1000000
          sudo losetup --partscan ${{ env.DEVICE }} ArchLinuxARM-rpi-4-aarch64-latest.img
          sudo parted -s ${{ env.DEVICE }} mklabel msdos
          sudo parted -s ${{ env.DEVICE }} mkpart primary fat32 2048s 411647s
          sudo parted -s ${{ env.DEVICE }} mkpart primary ext4 411648s 100%
          sudo mkfs.vfat -F 32 ${{ env.DEVICE }}p1
          sudo mkfs.ext4 ${{ env.DEVICE }}p2
          ${{ env.BUILDER_ENV }} "mount ${{ env.DEVICE }}p2 /mnt"
          ${{ env.BUILDER_ENV }} "mkdir -p /mnt/boot"
          ${{ env.BUILDER_ENV }} "mount ${{ env.DEVICE }}p1 /mnt/boot"

      - name: generate target
        run: |
          ${{ env.BUILDER_ENV }} "pacstrap -cGM /mnt ${{ env.PACKAGES }}"
          ${{ env.BUILDER_ENV }} "rm /mnt/etc/resolv.conf"
          ${{ env.TARGET_ENV}} systemctl enable sshd systemd-networkd systemd-resolved systemd-timesyncd haveged
          ${{ env.TARGET_ENV}} "echo -e '[Match]\nName=en*\n\n[Network]\nDHCP=yes\nDNSSEC=no'>/etc/systemd/network/en.network"
          ${{ env.TARGET_ENV}} "echo -e '[Match]\nName=eth*\n\n[Network]\nDHCP=yes\nDNSSEC=no'>/etc/systemd/network/eth.network"
          ${{ env.TARGET_ENV}} "echo '/dev/mmcblk0p1  /boot   vfat    defaults        0       0'>>/etc/fstab"
          ${{ env.TARGET_ENV}} "echo 'alarm'>/etc/hostname"
          ${{ env.TARGET_ENV}} "echo 'LANG=C'>/etc/locale.conf"
          ${{ env.TARGET_ENV}} "echo "root:root" | chpasswd"
          ${{ env.TARGET_ENV}} "useradd -d /home/alarm -m -U alarm"
          ${{ env.TARGET_ENV}} "echo "alarm:alarm" | chpasswd"
          ${{ env.TARGET_ENV}} "ln -s /run/systemd/resolve/resolv.conf /etc/resolv.conf"

      - name: package target
        run: |
          ${{ env.BUILDER_ENV }} "rm -rf /mnt/etc/*- /mnt/root/.bash_history /mnt/root/.gnupg /mnt/var/log/* /mnt/var/lib/systemd/* "
          ${{ env.BUILDER_ENV }} "sync"
          ${{ env.BUILDER_ENV }} "bsdtar --exclude 'lost+found' -czpf /ArchLinuxARM-rpi-4-aarch64-latest.tar.gz -C /mnt/ ."
          ${{ env.BUILDER_ENV }} "umount -R /mnt"
          sudo losetup -d ${{ env.DEVICE }}
          zip ArchLinuxARM-rpi-4-aarch64-latest.img.zip ArchLinuxARM-rpi-4-aarch64-latest.img

      - name: generate release
        run: |
          mkdir ./release
          sudo mv ./builder/ArchLinuxARM-rpi-4-aarch64-latest.tar.gz ./release/ArchLinuxARM-rpi-4-aarch64-latest.tar.gz
          sudo mv ./ArchLinuxARM-rpi-4-aarch64-latest.img.zip ./release/ArchLinuxARM-rpi-4-aarch64-latest.img.zip
          sha256sum ./release/ArchLinuxARM-rpi-4-aarch64-latest.tar.gz > ./release/ArchLinuxARM-rpi-4-aarch64-latest.tar.gz.sha256sum
          sha256sum ./release/ArchLinuxARM-rpi-4-aarch64-latest.img.zip > ./release/ArchLinuxARM-rpi-4-aarch64-latest.img.zip.sha256sum

      - name: delete old release
        uses: dev-drprasad/delete-tag-and-release@v0.2.0
        with:
          delete_release: true
          tag_name: latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create a release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: latest
          release_name: latest
          draft: false
          prerelease: false
          body: |
            ${{ env.RELEASE  }}

      - name: Upload ArchLinuxARM-rpi-4-aarch64-latest.tar.gz
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ArchLinuxARM-rpi-4-aarch64-latest.tar.gz
          asset_name: ArchLinuxARM-rpi-4-aarch64-latest.tar.gz
          asset_content_type: application/gzip

      - name: Upload ArchLinuxARM-rpi-4-aarch64-latest.tar.gz.sha256sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ArchLinuxARM-rpi-4-aarch64-latest.tar.gz.sha256sum
          asset_name: ArchLinuxARM-rpi-4-aarch64-latest.tar.gz.sha256sum
          asset_content_type: text/plain

      - name: Upload ArchLinuxARM-rpi-4-aarch64-latest.img.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ArchLinuxARM-rpi-4-aarch64-latest.img.zip
          asset_name: ArchLinuxARM-rpi-4-aarch64-latest.img.zip
          asset_content_type: application/gzip

      - name: Upload ArchLinuxARM-rpi-4-aarch64-latest.tar.gz.sha256sum
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/ArchLinuxARM-rpi-4-aarch64-latest.img.zip.sha256sum
          asset_name: ArchLinuxARM-rpi-4-aarch64-latest.img.zip.sha256sum
          asset_content_type: text/plain
